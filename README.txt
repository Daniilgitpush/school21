------------------------------------------------------------------------------------------

--- Привет! Это "самые" интересные проекты(есть еще, но они более мелкие) из Школы 21. ---

------------------------------ Навигация по проектам -------------------------------------

--- Общая тематика проектов разделена по веткам(C, DevOps, Postgres)

- 1. Задание к проекту хранится в домашней директории проекта(README.md).
- 2. Выполнение заания хранится в директории src/.
- 3. Некоторые проекты содержат в качестве решения report.md.
- 4. Проекты, содержащие CI/CD, имеют файл под названием .gitlab-ci.yml в домашне директории проекта.

-------------------- Последняя дата обновления проектов 21.03.2024 -----------------------



---------------------------- Коротко о проектах ------------------------------------------

--- """С language"""

- 1. Simple Bash Utils

/// Реализация утилит cat и grep
/// Работа с флагами и их комбинациями
/// Обработка неправильного формата ввода
/// Сборка через Makefile
/// Покрытие тестами
/// Проверка на стиль кода, утечки памяти, флаги сборки при компиляции

*** Чему научил проект ***
* Покрытие тестами. Работа с аргументами командной строки.

- 2. Math

/// Написание собственной библиотеки. Реализация функций из библиотекеи math.h
/// Поктрытие Unit тестами. HTML
/// Сборка через Makefile
/// Проверка на стиль кода, утечки памяти

*** Чему научил проект ***
* Работа с lcov.

- 3. Decimal

/// Написание математических решиний при работе с "большим числом"
/// Поктрытие Unit тестами. HTML
/// Сборка через Makefile
/// Проверка на стиль кода, утечки памяти

*** Чему научил проект ***
* Работа с побитовыми операциями. Подробно понял, как устроена работа с числами
  под капотом.
  
- 4. Matrix

/// Создание библиотеки для работы с матрицами
/// Поктрытие Unit тестами. HTML
/// Сборка через Makefile
/// Проверка на стиль кода, утечки памяти

*** Чему научил проект ***
* Проект похож на Math, с матрицами был знаком из программы ВУЗА

----------------------------------------------------------------------------------

--- """DevOps"""

- 1. LinuxNetwork

/// Сеть/Маски. ipcalc
/// Статическая маршрутизация между двумя машинами
/// iprf3
/// iptables. nmap
/// Статическая маршрутизация сети. Поднятие 5 машин Ubuntu Server на Virtual Box
/// DHCP
/// NAT
/// SSH Tunnels

*** Чему научил проект ***
* Работа с неколькими машинами. Настройка

- 2. Linux Monitoring v1.0

/// Написание bash скриптов

*** Чему научил проект ***
* Больше опыта в написании скриптов

- 3. Linux Monitoring v2.0

/// Написание скрипта для генерации файлов, по указанному пути, имени, весу
/// Написание скрипта для генерации файлов в случайных местах файловой системы
/// Очистка файловой системы
/// Генератор логов
/// GoAccess
/// Prometheus, Grafana
/// Написание своего node_exporter для сбора метрик системы

*** Чему научил проект ***
* Все, что есть в этом проекте, было для меня новым. Хороший проект

- 4. Docker

/// Запуск докер образа, останвка, порты, перезапуск
/// Операции с контейнером
/// Написание мини веб-сервера
/// Написание своего докер образа
/// Dockle
/// Docker Compose

*** Чему научил проект ***
* Базовой работе с докером

- 5. CI/CD

/// Настройка gotlab-runner
/// Сборка
/// Тест кодстайла
/// Интеграционные тесты
/// Этап деплоя
/// Уведомления о успешном/провальном прохождении этапов в telegram

*** Чему научил проект ***
* Базовой работе с CI/CD

---------------------------------------------------------------------------------

--- """PostgreSQL"""

/// Встроенные запросы
/// UNION, INTERSEC, EXCEPT
/// JOIN
/// INSRT/UPDATE/DELETE
/// INDEX. EXPLAIN ANALYZE
/// VIEW
/// COMMIT. SHOW TRANSACTION ISOLATION LEVEL. READ COMMITED. SERIALIZABLE. REPEATABE READ. DEADLOCK
/// Trigger Function

*** Чему научил проект ***
* Создание таблиц, запросы
